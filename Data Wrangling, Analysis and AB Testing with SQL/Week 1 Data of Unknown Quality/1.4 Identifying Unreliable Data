--Exercise 1: Using any methods you like determine if you can you trust this events table. 
--Secret: There are some entire days missing

SELECT *
FROM 
  dsv1069.events_201701

--Solution
  
SELECT 
  TO_CHAR(event_time, 'YYYY-MM-DD') AS date,
  COUNT(*)         AS rows
FROM 
  dsv1069.events_201701
GROUP BY
  TO_CHAR(event_time, 'YYYY-MM-DD')
  
  --Exercise 2: Using any methods you like, determine if you can you trust this events table. 
--(HINT: When did we start recording events on mobile)
--Secret: In this case, mobile logging hasn't been implemented until recently

SELECT *
FROM dsv1069.events_ex2
WHERE platform LIKE 'mobile%'

--Solution 1

SELECT 
  date(event_time) AS date,
  COUNT(*)
FROM 
  dsv1069.events_ex2
GROUP BY
  date(event_time)
  
--Solution 2

SELECT 
  date(event_time) AS date,
  event_name,
  COUNT(*)
FROM 
  dsv1069.events_ex2
GROUP BY
  date(event_time),
  event_name

--Solution 3
SELECT 
  DATE(event_time) AS date,
  platform,
  COUNT(*)
FROM 
  dsv1069.events_ex2
GROUP BY
  DATE(event_time),
  event_name,
  platform

--Solution 4
SELECT 
  TO_CHAR(event_time, 'YYYY-MM-DD') AS date,
  platform,
  COUNT(*)
FROM 
  dsv1069.events_ex2
GROUP BY
  TO_CHAR(event_time, 'YYYY-MM-DD'),
  event_name,
  platform
  
--Exercise 3: Imagine that you need to count item views by day. 
--You found this table item_views_by_category_temp - should you use it to answer your questiuon?

SELECT SUM(view_events) AS event_count
FROM dsv1069.item_views_by_category_temp
-- Not good to be used, less rows

SELECT 
  COUNT(DISTINCT event_id) AS event_count
FROM 
  dsv1069.events 
WHERE event_name = 'view_item'
--more rows

--Exercise 4: Using any methods you like, decide if this table is ready to be used as a source of truth.

SELECT *
FROM dsv1069.raw_events

--Solution
SELECT 
  date(event_time) AS date
FROM dsv.1069.raw_events

--Exercise 5: Is this the right way to join orders to users? Is this the right way  this join. 

SELECT *
FROM dsv1069.orders
JOIN dsv1069.users
ON orders.user_id = users.parent_user_id

--Solution
SELECT COUNT(*)
FROM dsv1069.orders
JOIN dsv1069.users
ON orders.user_id = COALESCE(users.parent_user_id, users.id)
